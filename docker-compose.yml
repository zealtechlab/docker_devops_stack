version: '3'

networks:
  cicdnetwork:
    driver: bridge
  jenkins_docker:
    driver: bridge
  sonardb_network:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_bundled-plugins:
  sonarqube_db:
  sonarqube_db_data:
  nexus_data:
  jenkins_data:
  jenkins_docker_certs:
  jenkins_logs:

services:

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    hostname: nexus
    ports:
      - "18081:8081"
      - "15000:5000"
    networks:
      cicdnetwork:
        aliases:
          - nexus
    volumes:
      - nexus_data:/nexus-data

  # https://www.jenkins.io/doc/tutorials/build-a-python-app-with-pyinstaller/

  # $ docker network create jenkins-docker
  # $ docker volume create jenkins-docker-certs
  # $ docker volume create jenkins-data
  # $ docker container run --name jenkins-docker --rm --detach \
  # --privileged --network jenkins --network-alias docker \
  # --env DOCKER_TLS_CERTDIR=/certs \
  # --volume jenkins-docker-certs:/certs/client \
  # --volume jenkins-data:/var/jenkins_home \
  # --volume "$HOME":/home docker:dind

  jenkins_docker_dind:
    privileged: true
    image: docker:dind
    container_name: jenkins_docker_dind
    hostname: jenkins_docker_dind
    volumes:
      - ~:/home
      - jenkins_docker_certs:/certs/client
      - jenkins_data:/var/jenkins_home
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    networks:
      jenkins_docker:
        aliases:
          - docker
      cicdnetwork:
        aliases:
          - docker_dind
 
  jenkins:
    build: ./jenkins
    container_name: jenkins
    hostname: jenkins
    image: jenkins:mycicd
    ports:
      - "18080:8080"
      - "50000:50000"
    networks:
      cicdnetwork:
        aliases:
          - jenkins
      jenkins_docker:
        aliases:
          - jenkins
    volumes:
      - ~:/home
      - jenkins_data:/var/jenkins_home
      - jenkins_docker_certs:/certs/client:ro
      - jenkins_logs:/var/log/jenkins
    depends_on:
      - jenkins_docker_dind
      - nexus
      - sonarqube
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
      - NEXUS_PORT=8081
      - SONAR_PORT=9000
      - SONAR_DB_PORT=5432

  sonardb:
    image: postgres:9.6
    container_name: sonardb
    hostname: sonardb
    networks:
      sonardb_network:
        aliases:
          - sonardb
    ports:
      - "5432:5432"
    volumes:
      - sonarqube_db:/var/lib/postgresql
      - sonarqube_db_data:/var/lib/postgresql/data
    environment:
     - POSTGRES_USER=sonar
     - POSTGRES_PASSWORD=sonar
     - POSTGRESQL_DB=sonar

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    hostname: sonarqube
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    ports:
     - "19000:9000"
    networks:
      cicdnetwork:
        aliases:
          - sonarqube
      sonardb_network:
        aliases:
          - sonarqube
    depends_on:
      - sonardb
    environment:
     - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
     - SONARQUBE_JDBC_USERNAME=sonar
     - SONAR_JDBC_PASSWORD=sonar
  
  nginx-proxy:
    build: ./nginx
    container_name: nginx-proxy
    hostname: nginx-proxy
    image: nginx:mycicd
    networks:
      cicdnetwork:
        aliases:
          - nginx-proxy
    ports:
      - "28080:8080"
      - "28081:8081"
      - "29000:9000"
      - "20080:80"
    healthcheck:
        test: curl -f http://nginx-proxy
        interval: 15s
        timeout: 5s
        retries: 3
    links:
      - jenkins
      - sonarqube
      - nexus